# Telegram Bot Environment Configuration Template
# Copy this file to .env and fill in your actual values
# NEVER commit the .env file to version control!

# =============================================================================
# TELEGRAM BOT CONFIGURATION
# =============================================================================

# Telegram Bot Token (get from @BotFather)
# Format: 123456789:ABCDEF...
TELEGRAM_TOKEN_BOT=your_telegram_bot_token_here
ORDER_BOT_TOKEN=your_telegram_bot_token_here

# =============================================================================
# OPENAI CONFIGURATION  
# =============================================================================

# OpenAI API Key (get from https://platform.openai.com/api-keys)
# Format: sk-...
OPENAI_API_KEY=your_openai_api_key_here

# =============================================================================
# GOOGLE SHEETS CONFIGURATION
# =============================================================================

# Google Sheets settings
SHEET_NAME=9_ტონა_ფული
WORKSHEET_NAME=Payments
SHEET_ID=your_google_sheet_id_here_optional

# Google Service Account Credentials
# Option 1: File path (for local development)
CREDS_FILE=credentials.json

# Option 2: JSON content (for Docker deployment)
# GOOGLE_CREDENTIALS_JSON={"type": "service_account", "project_id": "...", ...}

# =============================================================================
# APPLICATION SETTINGS
# =============================================================================

# Customer data file
CUSTOMERS_FILE=customers.json

# Rate limiting (seconds between messages per user)
MESSAGE_COOLDOWN=5

# Pending order timeout (seconds)
PENDING_ORDER_TIMEOUT=300

# Cleanup interval (seconds)
CLEANUP_INTERVAL=600

# Retry configuration
MAX_RETRIES=3
RETRY_DELAY=2

# =============================================================================
# CACHING CONFIGURATION
# =============================================================================

# GPT response cache TTL (seconds)
GPT_CACHE_TTL=300

# Maximum cache size (number of entries)
MAX_CACHE_SIZE=1000

# Redis configuration (if using Redis for caching)
REDIS_URL=redis://localhost:6379
REDIS_PASSWORD=your_redis_password_here

# =============================================================================
# DEPLOYMENT CONFIGURATION
# =============================================================================

# Domain for SSL certificates (optional)
DOMAIN=your-domain.com

# Email for ACME/Let's Encrypt certificates
ACME_EMAIL=admin@your-domain.com

# Bot service configuration
BOT_SERVICE_NAME=order-bot-secure
HEALTH_PORT=8080

# =============================================================================
# LOGGING CONFIGURATION
# =============================================================================

# Log level (DEBUG, INFO, WARNING, ERROR)
LOG_LEVEL=INFO

# Log format (json, text)
LOG_FORMAT=json

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================

# Enable/disable features
ENABLE_HEALTH_ENDPOINT=true
ENABLE_METRICS_ENDPOINT=false
ENABLE_DEBUG_MODE=false

# Security settings
MAX_MESSAGE_LENGTH=1000
ALLOWED_USER_IDS=  # Comma-separated list of allowed Telegram user IDs (optional)

# =============================================================================
# MONITORING CONFIGURATION
# =============================================================================

# Monitoring settings
ENABLE_MONITORING=true
METRICS_PORT=9090

# Alerting (if configured)
ALERT_WEBHOOK_URL=https://your-monitoring-service.com/webhook
ALERT_ON_ERRORS=true

# =============================================================================
# DEVELOPMENT SETTINGS
# =============================================================================

# Development mode settings (set to false in production)
DEBUG=false
DEVELOPMENT_MODE=false

# Test credentials (for development only)
TEST_TELEGRAM_TOKEN=
TEST_OPENAI_API_KEY=

# =============================================================================
# DOCKER CONFIGURATION
# =============================================================================

# Container settings
CONTAINER_NAME=order-bot-secure
CONTAINER_MEMORY_LIMIT=512m
CONTAINER_CPU_LIMIT=0.5

# Network settings
DOCKER_NETWORK_WEB=web
DOCKER_NETWORK_INTERNAL=bot_internal

# Volume settings
CUSTOMER_DATA_VOLUME=telegram-bot_customer_data
LOGS_VOLUME=telegram-bot_logs

# =============================================================================
# BACKUP CONFIGURATION
# =============================================================================

# Backup settings
ENABLE_BACKUPS=true
BACKUP_INTERVAL=3600  # seconds (1 hour)
BACKUP_RETENTION_DAYS=7
BACKUP_LOCATION=/opt/backups

# =============================================================================
# NOTES AND INSTRUCTIONS
# =============================================================================

# 1. Copy this file to .env: cp .env.template .env
# 2. Fill in your actual values
# 3. Set secure file permissions: chmod 600 .env
# 4. Never commit .env to version control
# 5. For production, use environment variables or secret management

# Required secrets for GitHub Actions:
# - GCP_PROJECT_ID: Your Google Cloud Project ID
# - GCP_SA_KEY: Service account key JSON content
# - DOMAIN: Your domain name (optional)
# - ACME_EMAIL: Email for SSL certificates

# Security checklist:
# ✅ Bot token is from @BotFather
# ✅ OpenAI API key is valid
# ✅ Google credentials have proper permissions
# ✅ File permissions are set to 600
# ✅ .env is in .gitignore
# ✅ No credentials in source code