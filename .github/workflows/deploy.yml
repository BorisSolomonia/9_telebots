name: Deploy Telegram Bots

on:
  push:
    branches: [ master ]
  workflow_dispatch:

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Run tests (if any)
      run: |
        # Add test commands here when tests are available
        echo "No tests configured yet"
        
    - name: Build and push Docker images
      env:
        DOCKER_REGISTRY: ${{ secrets.DOCKER_REGISTRY }}
        DOCKER_USERNAME: ${{ secrets.DOCKER_USERNAME }}
        DOCKER_PASSWORD: ${{ secrets.DOCKER_PASSWORD }}
      run: |
        echo "Building Docker images..."
        docker build -t payment-bot ./payment-bot/
        docker build -t order-bot ./order-bot/
        
        # Push to registry if credentials are configured
        if [ ! -z "$DOCKER_REGISTRY" ] && [ ! -z "$DOCKER_USERNAME" ] && [ ! -z "$DOCKER_PASSWORD" ]; then
          echo "$DOCKER_PASSWORD" | docker login $DOCKER_REGISTRY -u $DOCKER_USERNAME --password-stdin
          docker tag payment-bot $DOCKER_REGISTRY/payment-bot:latest
          docker tag order-bot $DOCKER_REGISTRY/order-bot:latest
          docker push $DOCKER_REGISTRY/payment-bot:latest
          docker push $DOCKER_REGISTRY/order-bot:latest
        else
          echo "Docker registry credentials not configured, skipping push"
        fi
        
    - name: Deploy to GCP (if configured)
      env:
        GCP_PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
        GCP_SA_KEY: ${{ secrets.GCP_SA_KEY }}
        GCP_ZONE: ${{ secrets.GCP_ZONE }}
        GCP_INSTANCE: ${{ secrets.GCP_INSTANCE }}
      run: |
        if [ ! -z "$GCP_PROJECT_ID" ] && [ ! -z "$GCP_SA_KEY" ]; then
          echo "GCP deployment would run here"
          echo "Configure GCP_PROJECT_ID, GCP_SA_KEY, GCP_ZONE, GCP_INSTANCE secrets"
          # Uncomment and configure when ready for GCP deployment:
          # echo "$GCP_SA_KEY" | base64 -d > gcp-key.json
          # gcloud auth activate-service-account --key-file gcp-key.json
          # gcloud config set project $GCP_PROJECT_ID
          # gcloud compute scp --zone=$GCP_ZONE . $GCP_INSTANCE:~/app --recurse
          # gcloud compute ssh --zone=$GCP_ZONE $GCP_INSTANCE --command="cd ~/app && docker-compose up -d"
        else
          echo "GCP deployment not configured"
        fi
        
    - name: Notify deployment status
      run: |
        echo "Deployment workflow completed"
        echo "Configure secrets in GitHub repository settings for full deployment"